name: 'Security Code Scanner'

# Minimal permissions - jobs override as needed
permissions:
  contents: read

on:
  workflow_call:
    inputs:
      repo:
        description: 'Repository that requested the scan'
        required: false
        type: string
      languages_config:
        description: |
          Optional: JSON array of language configurations to override/supplement repo config file.
          Auto-detects languages and loads repo-specific config from packages/codeql-action/repo-configs/${repo}.cjs.
          Workflow input takes precedence over file config for same languages.
          Example:
          [
            {
              "language": "java",
              "build_mode": "manual",
              "build_command": "./gradlew build",
              "version": "21",
              "distribution": "temurin"
            },
            {
              "language": "javascript",
              "build_mode": "none"
            }
          ]
        required: false
        type: string
        default: ''
      paths_ignored:
        description: 'Comma delimited paths to ignore during scan'
        required: false
        type: string
        default: ''
      rules_excluded:
        description: 'Comma delimited IDs of rules to exclude'
        required: false
        type: string
        default: ''
      project_metrics_token:
        description: 'Analytics token to log failed builds'
        required: false
        type: string
        default: ''
      slack_webhook:
        description: 'Slack webhook for notifications'
        required: false
        type: string
        default: ''


env:
  MONOREPO_PATH: .security-scanner

jobs:
  # Detect languages and create matrix
  setup:
    runs-on: ubuntu-latest
    outputs:
      languages: ${{ steps.detect-languages.outputs.languages }}
      matrix: ${{ steps.detect-languages.outputs.matrix }}
    steps:
      - name: Debug GitHub Action Ref
        run: |
          echo "=================== ACTION REF DEBUG ==================="
          echo "github.action_ref: ${{ github.action_ref }}"
          echo "github.action_repository: ${{ github.action_repository }}"
          echo "github.action_path: ${{ github.action_path }}"
          echo "github.workflow_ref: ${{ github.workflow_ref }}"
          echo "github.workflow_sha: ${{ github.workflow_sha }}"
          echo "github.ref: ${{ github.ref }}"
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "github.sha: ${{ github.sha }}"
          echo ""
          echo "Environment variables:"
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
          echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
          echo ""
          echo "All GITHUB_* env vars:"
          env | grep GITHUB_ | sort
          echo "========================================================"

      - name: Checkout monorepo (for local actions)
        uses: actions/checkout@v4
        with:
          repository: metamask/security-codescanner-monorepo
          ref: ${{ github.action_ref || 'main' }}
          path: ${{ env.MONOREPO_PATH }}

      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          path: ${{ inputs.repo }}

      - name: Detect languages and create matrix
        id: detect-languages
        uses: ./.security-scanner/packages/language-detector
        with:
          repo: ${{ inputs.repo }}
          languages_config: ${{ inputs.languages_config }}

  # Debug logging job to show detected languages and API response
  debug-languages:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Show Language Detection Results
        env:
          REPO: ${{ inputs.repo }}
          DETECTED_LANGUAGES: ${{ needs.setup.outputs.languages }}
          DETECTED_MATRIX: ${{ needs.setup.outputs.matrix }}
        run: |
          echo "=================== LANGUAGE DETECTION DEBUG ==================="
          echo "Repository: $REPO"
          echo
          echo "Exact GitHub API command used:"
          echo "gh api -H \"Accept: application/vnd.github+json\" -H \"X-GitHub-Api-Version: 2022-11-28\" \"/repos/$REPO/languages\""
          echo
          echo "Raw GitHub API Response:"
          api_response=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/$REPO/languages" 2>/dev/null || echo "{}")
          echo "$api_response"
          echo
          echo "Pretty-printed GitHub languages with byte counts:"
          echo "$api_response" | jq -r 'to_entries[] | "\(.key): \(.value) bytes"' 2>/dev/null || echo "Failed to parse JSON"
          echo
          echo "Detected Languages (output from language-detector):"
          echo "$DETECTED_LANGUAGES"
          echo
          echo "Generated Matrix (output from language-detector):"
          echo "$DETECTED_MATRIX"
          echo
          echo "Matrix parsed:"
          echo "$DETECTED_MATRIX" | jq '.' 2>/dev/null || echo "Failed to parse matrix JSON"
          echo "================================================================="

  # Run CodeQL analysis for each detected language
  codeql-analysis:
    needs: setup
    if: ${{ fromJSON(needs.setup.outputs.matrix).include[0] != null }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.setup.outputs.matrix) }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout monorepo (for local actions)
        uses: actions/checkout@v4
        with:
          repository: MetaMask/experimental-security-codescanner-monorepo
          ref: ${{ github.action_ref || 'main' }}
          path: ${{ env.MONOREPO_PATH }}

      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          path: ${{ inputs.repo }}

      - name: Debug Directory Structure for CodeQL
        run: |
          echo "=================== CODEQL DIRECTORY DEBUG ==================="
          echo "Current working directory:"
          pwd
          echo
          echo "Directory tree (top 3 levels):"
          find . -maxdepth 3 -type d | head -20 | sort
          echo
          echo "Looking for query suite files:"
          find . -name "*.qls" -type f 2>/dev/null || echo "No .qls files found"
          echo
          echo "Contents of ${{ env.MONOREPO_PATH }}/packages/codeql-action/query-suites/:"
          ls -la ${{ env.MONOREPO_PATH }}/packages/codeql-action/query-suites/ 2>/dev/null || echo "Directory not found"
          echo
          echo "Contents of custom-queries/query-suites/:"
          ls -la custom-queries/query-suites/ 2>/dev/null || echo "Directory not found"
          echo
          echo "Target repository path:"
          ls -la ${{ inputs.repo }}/ 2>/dev/null || echo "Target repo directory not found"
          echo
          echo "Repository input: ${{ inputs.repo }}"
          echo "Language: ${{ matrix.language }}"
          echo "================================================================="

      - name: Run CodeQL Analysis
        uses: ./.security-scanner/packages/codeql-action
        with:
          repo: ${{ inputs.repo }}
          language: ${{ matrix.language }}
          paths_ignored: ${{ inputs.paths_ignored }}
          rules_excluded: ${{ inputs.rules_excluded }}
          build_mode: ${{ matrix.build_mode }}
          build_command: ${{ matrix.build_command }}
          version: ${{ matrix.version }}
          distribution: ${{ matrix.distribution }}

  # Run Semgrep analysis once for all languages
  semgrep-analysis:
    needs: setup
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout monorepo (for local actions)
        uses: actions/checkout@v4
        with:
          repository: MetaMask/experimental-security-codescanner-monorepo
          ref: ${{ github.action_ref || 'main' }}
          path: ${{ env.MONOREPO_PATH }}

      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          path: ${{ inputs.repo }}

      - name: Run Semgrep Analysis
        uses: ./.security-scanner/packages/semgrep-action
        with:
          paths_ignored: ${{ inputs.paths_ignored }}

  # Collect results and handle notifications
  finalize:
    needs: [codeql-analysis, semgrep-analysis]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Determine Overall Scan Success
        env:
          CODEQL_RESULT: ${{ needs.codeql-analysis.result }}
          SEMGREP_RESULT: ${{ needs.semgrep-analysis.result }}
        run: |
          if [[ "$CODEQL_RESULT" == "failure" || "$SEMGREP_RESULT" == "failure" ]]; then
            SCAN_RESULT='failure'
          else
            SCAN_RESULT='success'
          fi
          echo "SCAN_RESULT=$SCAN_RESULT" >> $GITHUB_ENV

      - name: Post to Slack channel
        if: ${{ env.SCAN_RESULT == 'failure' && inputs.slack_webhook != '' }}
        uses: slackapi/slack-github-action@007b2c3c751a190b6f0f040e47ed024deaa72844
        with:
          payload: |
            {
              "text": "Security scan failed for ${{ inputs.repo }} - Run: https://github.com/${{ inputs.repo }}/actions/runs/${{ github.run_id }}",
              "channel": "#security-notifications"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ inputs.slack_webhook }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Log metrics
        if: ${{ inputs.project_metrics_token != '' }}
        run: |
          # TODO: Implement metrics logging
          echo "Logging scan result: $SCAN_RESULT for repo: ${{ inputs.repo }}"

      - name: Fail if security issues found
        if: ${{ env.SCAN_RESULT == 'failure' }}
        run: exit 1
