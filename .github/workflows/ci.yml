name: 'Monorepo CI/CD'

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  # Lint and format check
  lint:
    name: 'Lint & Format'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Check formatting
        run: yarn lint

      - name: Check dependency issues
        run: yarn lint:dependencies

  # Validate GitHub Actions
  validate:
    name: 'Validate Actions'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Validate action files
        run: yarn validate

      - name: Check packages
        run: yarn check

  # Test individual packages
  test:
    name: 'Test Packages'
    runs-on: ubuntu-latest
    needs: [lint, validate]
    strategy:
      matrix:
        package: [main-action, codeql-action, semgrep-action]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run package tests
        run: yarn workspace @witmicko/${{ matrix.package }} test

      - name: Run package linting
        run: yarn workspace @witmicko/${{ matrix.package }} lint

  # Integration test - validate the entire security scanning workflow
  integration-test:
    name: 'Integration Test'
    runs-on: ubuntu-latest
    needs: [test]
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Test reusable workflows exist
        run: |
          test -f .github/workflows/reusable-codeql.yml
          test -f .github/workflows/reusable-semgrep.yml  
          test -f .github/workflows/security-scan.yml

      - name: Validate workflow syntax
        run: |
          echo "✅ All workflow files exist and are accessible"

  # Build summary
  build-summary:
    name: 'Build Summary'
    runs-on: ubuntu-latest
    needs: [lint, validate, test, integration-test]
    if: always()
    steps:
      - name: Build Status Summary
        run: |
          echo "## 🚀 Monorepo Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Lint & Format | ${{ needs.lint.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Validate Actions | ${{ needs.validate.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Test Packages | ${{ needs.test.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Integration Test | ${{ needs.integration-test.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.lint.result }}" == "success" && "${{ needs.validate.result }}" == "success" && "${{ needs.test.result }}" == "success" && "${{ needs.integration-test.result }}" == "success" ]]; then
            echo "🎉 **All checks passed!** The monorepo is ready for deployment." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some checks failed.** Please review the failing jobs above." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi